#define _CRT_SECURE_NO_WARNINGS 1
#include<string.h>
#include<errno.h>
#include<stdlib.h>
#include<math.h>
#include<stdio.h>
#include<assert.h>
int a[20][20],book[20][20],m,n,flag,top;
struct stac
{
	int x;
	int y;
};
struct stac d[100];
void dfs(int x, int y, int f)
{
	if (x == n && y == m + 1)
	{
		flag = 1;
		for (int i = 1; i <= top; i++)
			printf("(%d,%d) ", d[i].x, d[i].y);
	}
	if (x<1 || x>n || y < 1||y>m)
		return;
	if (a[x][y] == 0)
		return;
	if (book[x][y] == 0)
	{
		book[x][y] = 1;
		top++;
		d[top].x = x;
		d[top].y = y;
	}
	else
		return;
	if (a[x][y] >= 5 && a[x][y] <= 6)
	{
		if (f == 1)
			dfs(x, y + 1, 1);
		if (f == 2)
			dfs(x + 1, y, 2);
		if (f == 3)
			dfs(x, y - 1, 3);
		if (f == 4)
			dfs(x - 1, y, 4);
	}
	else
	{
		if (f == 1)
		{
			dfs(x - 1, y, 4);
			dfs(x + 1, y, 2);
		}
		if (f == 2)
		{
			dfs(x, y-1, 3);
			dfs(x, y+1, 1);
		}
		if (f == 3)
		{
			dfs(x - 1, y, 4);
			dfs(x + 1, y, 2);
		}
		if (f == 4)
		{
			dfs(x, y-1, 3);
			dfs(x, y+1, 1);
		}
	}
	book[x][y] = 0;
	top--;
}

int main()
{
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			scanf("%d", &a[i][j]);
	dfs(1, 1, 1);
	if (flag == 0)
		printf("impossible");
	return 0;
}
